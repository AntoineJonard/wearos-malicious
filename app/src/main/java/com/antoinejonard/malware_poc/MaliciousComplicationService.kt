package com.antoinejonard.malware_poc

import android.graphics.Color
import android.graphics.drawable.Icon
import androidx.wear.watchface.complications.data.*
import androidx.wear.watchface.complications.datasource.ComplicationDataSourceService
import androidx.wear.watchface.complications.datasource.ComplicationRequest

class MaliciousComplicationService : ComplicationDataSourceService() {

    override fun getPreviewData(type: ComplicationType) = getProtectionStatusComplicationData()

    override fun onComplicationRequest(
        request: ComplicationRequest,
        listener: ComplicationRequestListener
    ) {
        if (request.complicationType != ComplicationType.SMALL_IMAGE) {
            return
        }

        val data = getProtectionStatusComplicationData()

        listener.onComplicationData(data)
    }

    private fun getProtectionStatusComplicationData(): SmallImageComplicationData {

        val protectionOrdinal = applicationContext.getSharedPreferences(
            MainActivity::class.java.simpleName,
            MODE_PRIVATE
        ).getInt(protectionKey, 1)

        val data = SmallImageComplicationData.Builder(
            smallImage = SmallImage.Builder(
                Icon.createWithResource(this,
                    when (protectionOrdinal) {
                        0,1 -> R.drawable.secure
                        2 -> R.drawable.unsecure
                        else -> R.drawable.secure
                    }
                ).setTint(
                    when (protectionOrdinal) {
                        0 -> getColor(R.color.ok_green)
                        1 -> getColor(R.color.unknown_orange)
                        2 -> getColor(R.color.nok_red)
                        else -> getColor(R.color.nok_red)
                    }
                ),
                SmallImageType.ICON
            ).setAmbientImage(
                ambientImage = Icon.createWithResource(this,
                    when (protectionOrdinal) {
                        0,1 -> R.drawable.secure
                        2 -> R.drawable.unsecure
                        else -> R.drawable.secure
                    }
                ).setTint(Color.GRAY)
            ).build(),
            contentDescription = PlainComplicationText.Builder(
                getText(R.string.complication_description)
            ).build()
        ).build()

        return data
    }
}